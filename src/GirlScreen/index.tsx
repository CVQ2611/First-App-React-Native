import * as React from 'react';
import { Alert, Text, TouchableOpacity, View } from 'react-native';
import { Button, Header, Input } from 'react-native-elements';
import { Heading, Page } from '../Components';
import styled from 'styled-components';
import { getToken, sendPushNotification, Token } from '../Services/api';


const SubButton = styled(TouchableOpacity) < { color?: string } > `
    background-color: ${p => p.color || 'red'};
    display: flex;
    flex: 48% 0 0;
    border-radius: 4px;
    text-align: center;
    margin-bottom: 10px;
    height: 150px;
    align-items: center;
    justify-content: center;
    color: white;
`

const ContainerBar = styled(View)`
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: space-between;
`

const FullView = styled(View)`
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
`


const token = 'ExponentPushToken[asVznpHp0QNgr50_8dk0gK]'

function GirlScreen(): JSX.Element {
    const [tokenInput, setTokenInput] = React.useState('')
    const [token, setToken] = React.useState<Token | undefined>()
    const handleSubmitToken = async () => {
        const res = await getToken(tokenInput)
        setToken(res)
    }

    const handleChooseOptions = async (title: string, body: string) => {
        if (token) {
            const tokenSend = token?.token
            const res = await sendPushNotification(tokenSend, title, body)
        } else {
            Alert.alert('B·∫°n ch∆∞a c√≥ token c·ªßa g·∫•u H·ªçƒÉc b·∫°n >CH∆ØA C√ì G·∫§U< hihi:))')
        }
    }
    return (
        <FullView>
            <Header
                centerComponent={{
                    text: 'Trang G·∫•u N·ªØ üëß',
                    style: { color: '#fff', fontSize: 24, fontWeight: '700', lineHeight: 24, paddingBottom: 16 }
                }} />
            <Page>
                <View>
                    {token && <Heading>B·∫Øt ƒë·∫ßu tri·ªáu h·ªìi</Heading>}
                    {!token && (
                        <>
                            <Input
                                value={tokenInput}
                                label='M√£ s·ªë g·∫•u'
                                placeholder='Nh·∫≠p m√£ s·ªë c·ªßa b·∫°n nam v√†o ƒë√¢y!'
                                onChangeText={setTokenInput}
                            />
                            <Button title={'X√°c nh·∫≠n m√£ s·ªë'} onPress={() => handleSubmitToken()} />
                        </>
                    )}
                </View>

                {token && (
                    <View>
                        <Heading>
                            Tri·ªáu h·ªìi g·∫•u
                        </Heading>
                        <ContainerBar>
                            <SubButton color={'#e74c3c'} onPress={() => handleChooseOptions('Tri·ªáu h·ªìi g·∫•u', 'Em mu·ªën t√† t∆∞a üçµ')}>
                                <Text>Em mu·ªën t√† t∆∞a üçµ</Text>
                            </SubButton>
                            <SubButton color={'#2980b9'} onPress={() => handleChooseOptions('Tri·ªáu h·ªìi g·∫•u', 'Anh ∆°i em ƒë√≥i! ü•™')}>
                                <Text>Anh ∆°i em ƒë√≥i! ü•™</Text>
                            </SubButton>
                            <SubButton color={'#2ecc71'} onPress={() => handleChooseOptions('Tri·ªáu h·ªìi g·∫•u', 'Nh·ªõ anh qu√° ‚ù§Ô∏è')}>
                                <Text>Nh·ªõ anh qu√° ‚ù§Ô∏è</Text>
                            </SubButton>
                            <SubButton color={'#f1c40f'} onPress={() => handleChooseOptions('Tri·ªáu h·ªìi g·∫•u', 'G·ªçi cho em üì±')}>
                                <Text>G·ªçi cho em üì±</Text>
                            </SubButton>
                        </ContainerBar>
                    </View>
                )}
            </Page>
        </FullView>
    )
}

export default GirlScreen;